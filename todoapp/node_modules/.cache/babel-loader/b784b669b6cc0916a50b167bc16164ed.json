{"ast":null,"code":"var _jsxFileName = \"/home/vatsalshingala/react-learning/Todo-react-1/todoapp/src/Components/NewTaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react'; // import TaskListContext from \"./store/taskList-context\"\n\nimport './style/NewTaskForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewTaskForm(props) {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [taskList, setTaskList] = useState(JSON.parse(localStorage.getItem('takList')) || []); // console.log(taskList)\n\n  useEffect(() => {\n    localStorage.setItem('taskList', JSON.stringify(taskList));\n  }, [taskList]);\n\n  const onTitleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const onAddTaskHandler = event => {\n    // event.preventDefault();\n    if (event.key === \"Enter\") {\n      if (enteredTitle.trim().length === 0) {\n        alert(\"invalid\");\n        return;\n      } // console.log(enteredTitle);\n\n\n      setTaskList(preState => {\n        return [...preState, {\n          id: Math.random().toString(),\n          title: enteredTitle,\n          completed: false\n        }];\n      }); // props.onAddTask(enteredTitle)\n      // props.onEscape();\n\n      setEnteredTitle(\"\");\n    }\n\n    if (event.key === \"Escape\") {\n      console.log(\"hello\");\n      props.onEscape();\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"enter new task\",\n      type: \"text\",\n      value: enteredTitle,\n      onChange: onTitleChangeHandler,\n      onKeyDown: onAddTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewTaskForm, \"WDWj+904ULs771eOfr9CKhQwXeQ=\");\n\n_c = NewTaskForm;\n;\nexport default NewTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTaskForm\");","map":{"version":3,"sources":["/home/vatsalshingala/react-learning/Todo-react-1/todoapp/src/Components/NewTaskForm.js"],"names":["React","useState","useEffect","useContext","NewTaskForm","props","enteredTitle","setEnteredTitle","taskList","setTaskList","JSON","parse","localStorage","getItem","setItem","stringify","onTitleChangeHandler","event","target","value","onAddTaskHandler","key","trim","length","alert","preState","id","Math","random","toString","title","completed","console","log","onEscape"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,UAAjC,QAAkD,OAAlD,C,CACA;;AACA,OAAO,yBAAP;;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACS,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,KAA+C,EAAhD,CAAxC,CAF0B,CAG1B;;AAEAX,EAAAA,SAAS,CAAC,MAAI;AACZU,IAAAA,YAAY,CAACE,OAAb,CAAqB,UAArB,EAAiCJ,IAAI,CAACK,SAAL,CAAeP,QAAf,CAAjC;AAED,GAHQ,EAGP,CAACA,QAAD,CAHO,CAAT;;AAKA,QAAMQ,oBAAoB,GAAIC,KAAD,IAAW;AACtCV,IAAAA,eAAe,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAIH,KAAD,IAAW;AAClC;AAEA,QAAIA,KAAK,CAACI,GAAN,KAAc,OAAlB,EAA2B;AACzB,UAAIf,YAAY,CAACgB,IAAb,GAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AACpCC,QAAAA,KAAK,CAAC,SAAD,CAAL;AACA;AACD,OAJwB,CAKzB;;;AACAf,MAAAA,WAAW,CAAEgB,QAAD,IAAc;AACxB,eAAO,CACL,GAAGA,QADE,EAEL;AACEC,UAAAA,EAAE,EAACC,IAAI,CAACC,MAAL,GAAcC,QAAd,EADL;AAEEC,UAAAA,KAAK,EAAGxB,YAFV;AAGEyB,UAAAA,SAAS,EAAG;AAHd,SAFK,CAAP;AAQD,OATU,CAAX,CANyB,CAgBzB;AAEA;;AACAxB,MAAAA,eAAe,CAAC,EAAD,CAAf;AACD;;AACD,QAAIU,KAAK,CAACI,GAAN,KAAc,QAAlB,EAA4B;AAC1BW,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA5B,MAAAA,KAAK,CAAC6B,QAAN;AACA;AACD;AACF,GA7BD;;AAgCA,sBACE;AAAA,2BACE;AACE,MAAA,WAAW,EAAC,gBADd;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE5B,YAHT;AAIE,MAAA,QAAQ,EAAEU,oBAJZ;AAKE,MAAA,SAAS,EAAEI;AALb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAzDQhB,W;;KAAAA,W;AAyDR;AAED,eAAeA,WAAf","sourcesContent":["import React,{useState,useEffect,useContext} from 'react'\n// import TaskListContext from \"./store/taskList-context\"\nimport './style/NewTaskForm.css'\nfunction NewTaskForm(props) {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [taskList, setTaskList] = useState(JSON.parse(localStorage.getItem('takList')) || []);\n  // console.log(taskList)\n  \n  useEffect(()=>{\n    localStorage.setItem('taskList', JSON.stringify(taskList));\n    \n  },[taskList])\n\n  const onTitleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const onAddTaskHandler = (event) => {\n    // event.preventDefault();\n\n    if (event.key === \"Enter\") {\n      if (enteredTitle.trim().length === 0) {\n        alert(\"invalid\");\n        return;\n      }\n      // console.log(enteredTitle);\n      setTaskList((preState) => {\n        return [\n          ...preState,\n          {\n            id:Math.random().toString(),\n            title : enteredTitle,\n            completed : false\n          }\n        ]\n      })\n      // props.onAddTask(enteredTitle)\n      \n      // props.onEscape();\n      setEnteredTitle(\"\");\n    }\n    if (event.key === \"Escape\") {\n      console.log(\"hello\");\n      props.onEscape();\n      return;\n    }\n  };\n  \n\n  return (\n    <div>\n      <input\n        placeholder=\"enter new task\"\n        type=\"text\"\n        value={enteredTitle}\n        onChange={onTitleChangeHandler}\n        onKeyDown={onAddTaskHandler}\n      />\n    </div>\n  );\n};\n\nexport default NewTaskForm"]},"metadata":{},"sourceType":"module"}