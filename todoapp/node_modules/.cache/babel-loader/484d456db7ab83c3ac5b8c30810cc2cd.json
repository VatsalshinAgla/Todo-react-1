{"ast":null,"code":"var _jsxFileName = \"/home/vatsalshingala/react-learning/Todo-react-1/todoapp/src/Components/NewTaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TaskListContext from \"./store/taskList-context\";\nimport './style/NewTaskForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewTaskForm(props) {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const listCtx = useContext(TaskListContext);\n\n  const onTitleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const onAddTaskHandler = event => {\n    // event.preventDefault();\n    if (event.key === \"Enter\") {\n      if (enteredTitle.trim().length === 0) {\n        alert(\"invalid\");\n        return;\n      }\n\n      listCtx.addItem({\n        title: enteredTitle,\n        isCompleted: false\n      });\n      setEnteredTitle(\"\");\n    }\n\n    if (event.key === \"Escape\") {\n      props.onEscape();\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"enter new task\",\n      type: \"text\",\n      value: enteredTitle,\n      onChange: onTitleChangeHandler,\n      onKeyDown: onAddTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewTaskForm, \"bj3AQj0JXz1kOrYOo3IJ85PduPE=\");\n\n_c = NewTaskForm;\n;\nexport default NewTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTaskForm\");","map":{"version":3,"sources":["/home/vatsalshingala/react-learning/Todo-react-1/todoapp/src/Components/NewTaskForm.js"],"names":["React","useState","useEffect","TaskListContext","NewTaskForm","props","enteredTitle","setEnteredTitle","listCtx","useContext","onTitleChangeHandler","event","target","value","onAddTaskHandler","key","trim","length","alert","addItem","title","isCompleted","onEscape"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAO,yBAAP;;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMO,OAAO,GAAIC,UAAU,CAACN,eAAD,CAA3B;;AACA,QAAMO,oBAAoB,GAAIC,KAAD,IAAW;AACtCJ,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAIH,KAAD,IAAW;AAClC;AAEA,QAAIA,KAAK,CAACI,GAAN,KAAc,OAAlB,EAA2B;AACzB,UAAIT,YAAY,CAACU,IAAb,GAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AACpCC,QAAAA,KAAK,CAAC,SAAD,CAAL;AACA;AACD;;AACDV,MAAAA,OAAO,CAACW,OAAR,CAAgB;AAACC,QAAAA,KAAK,EAAGd,YAAT;AAAsBe,QAAAA,WAAW,EAAG;AAApC,OAAhB;AACAd,MAAAA,eAAe,CAAC,EAAD,CAAf;AACD;;AACD,QAAII,KAAK,CAACI,GAAN,KAAc,QAAlB,EAA4B;AAC1BV,MAAAA,KAAK,CAACiB,QAAN;AACA;AACD;AACF,GAfD;;AAiBA,sBACE;AAAA,2BACE;AACE,MAAA,WAAW,EAAC,gBADd;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAEhB,YAHT;AAIE,MAAA,QAAQ,EAAEI,oBAJZ;AAKE,MAAA,SAAS,EAAEI;AALb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GApCQV,W;;KAAAA,W;AAoCR;AAED,eAAeA,WAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport TaskListContext from \"./store/taskList-context\"\nimport './style/NewTaskForm.css'\nfunction NewTaskForm(props) {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  \n  const listCtx =  useContext(TaskListContext)\n  const onTitleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const onAddTaskHandler = (event) => {\n    // event.preventDefault();\n\n    if (event.key === \"Enter\") {\n      if (enteredTitle.trim().length === 0) {\n        alert(\"invalid\");\n        return;\n      }\n      listCtx.addItem({title : enteredTitle,isCompleted : false})\n      setEnteredTitle(\"\")\n    }\n    if (event.key === \"Escape\") {\n      props.onEscape();\n      return;\n    }\n  };\n\n  return (\n    <div>\n      <input\n        placeholder=\"enter new task\"\n        type=\"text\"\n        value={enteredTitle}\n        onChange={onTitleChangeHandler}\n        onKeyDown={onAddTaskHandler}\n      />\n    </div>\n  );\n};\n\nexport default NewTaskForm"]},"metadata":{},"sourceType":"module"}